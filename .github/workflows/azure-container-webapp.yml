# This workflow will build docker images and push it to azure container registery
# Then these images will be deployed to Azure webapps

name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: cooee-taskweaver  # set this to the name of your Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/leap-cooee:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/leap-cooee:latest

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: Leap
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/leap-cooee:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: leapcontainers
          location: 'australiasoutheast'
      
      # - name: Restart web applications
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #         az webapp restart -n dockerwebapi-prod --resource-group Leap
      - name: logout
        run: |
          az logout
        if: always()
